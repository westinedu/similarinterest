# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# 
# Translators:
#   <vincent.rialland@gmail.com>, 2011.
msgid ""
msgstr ""
"Project-Id-Version: Mezzanine\n"
"Report-Msgid-Bugs-To: https://github.com/stephenmcd/mezzanine/issues\n"
"POT-Creation-Date: 2012-06-17 10:37-0430\n"
"PO-Revision-Date: 2012-06-17 16:10+0000\n"
"Last-Translator: Sebastián Ramírez Magrí <sebasmagri@gmail.com>\n"
"Language-Team: French (http://www.transifex.net/projects/p/mezzanine/language/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1)\n"

#: admin.py:38
msgid "Settings were successfully updated."
msgstr ""

#: admin.py:42
msgid "Change"
msgstr "Modifier"

#: defaults.py:21
msgid "Minimum length for passwords"
msgstr ""

#: defaults.py:28
msgid "List of fields to exclude from the profile form."
msgstr ""

#: defaults.py:35
msgid "If ``True``, users will have their own public profile pages."
msgstr ""

#: defaults.py:43
msgid ""
"If ``True``, when users create an account, they will be sent an email with a"
" verification link, which they must click to enable their account."
msgstr ""

#: defaults.py:52
msgid "Controls the ordering and grouping of the admin menu."
msgstr "Contrôler l'ordre et le regroupement du menu d'administration"

#: defaults.py:55
msgid "Content"
msgstr "Contenu"

#: defaults.py:56
msgid "Media Library"
msgstr "Librairie de médias"

#: defaults.py:57
msgid "Site"
msgstr "Site"

#: defaults.py:58
msgid "Users"
msgstr "Utilisateurs"

#: defaults.py:64
msgid "Unregister these models from the admin."
msgstr "Désassocier ces modèles de l'administration"

#: defaults.py:71
msgid "bit.ly username"
msgstr "Nom d'utilisateur bit.ly"

#: defaults.py:72
msgid "Username for http://bit.ly URL shortening service."
msgstr ""

#: defaults.py:79
msgid "bit.ly key"
msgstr "Clé bit.ly"

#: defaults.py:80
msgid "Key for http://bit.ly URL shortening service."
msgstr ""

#: defaults.py:87
msgid "Enable featured images in blog posts"
msgstr "Activer l'image du jour"

#: defaults.py:94
msgid "Use date URLs"
msgstr "Utiliser des urls contenant des dates"

#: defaults.py:95
msgid ""
"If ``True``, URLs for blog post include the month and year. Eg: "
"/blog/yyyy/mm/slug/"
msgstr ""

#: defaults.py:103
msgid "Blog posts per page"
msgstr "Billets de blog par page"

#: defaults.py:104
msgid "Number of blog posts shown on a blog listing page."
msgstr "Nombre de billets de blog affichés en mode liste"

#: defaults.py:111
msgid "Slug of the page object for the blog."
msgstr "Slug de la page associée au blog."

#: defaults.py:118
msgid ""
"Mezzanine's caching uses a technique know as mint caching. This is where the"
" requested expiry for a cache entry is stored with the cache entry in cache,"
" and the real expiry used has the ``CACHE_SET_DELAY`` added to it. Then on a"
" cache get, the store expiry is checked, and if it has past, the cache entry"
" is set again, and no entry is returned. This tries to ensure that cache "
"misses never occur, and if many clients were to get a cache miss at once, "
"only one would actually need to re-generated the cache entry."
msgstr ""

#: defaults.py:133
msgid "Accounts required for commenting"
msgstr ""

#: defaults.py:134
msgid "If ``True``, users must log in to comment."
msgstr ""

#: defaults.py:141
msgid "Akismet API Key"
msgstr ""

#: defaults.py:142
msgid ""
"Key for http://akismet.com spam filtering service. Used for filtering "
"comments and forms."
msgstr ""

#: defaults.py:150
msgid "Disqus shortname"
msgstr "Nom d'utilisateur Disqus"

#: defaults.py:151
msgid "Shortname for the http://disqus.com comments service."
msgstr "Diminutif pour le service de commentaire http://disqus.com"

#: defaults.py:158
msgid "Disqus public key"
msgstr "Clé publique Disqus"

#: defaults.py:159
msgid "Public key for http://disqus.com developer API"
msgstr ""

#: defaults.py:166
msgid "Disqus secret key"
msgstr "Clé privée Disqus"

#: defaults.py:167
msgid "Secret key for http://disqus.com developer API"
msgstr ""

#: defaults.py:174
msgid "Auto-approve comments"
msgstr "Valider automatiquement les commentaires"

#: defaults.py:175
msgid "If ``True``, built-in comments are approved by default."
msgstr "Si ``True``, les commentaires seront approuvés par défaut."

#: defaults.py:182
msgid "Admin comments"
msgstr "Commentaires de l'admin"

#: defaults.py:183
msgid "Number of latest comments shown in the admin dashboard."
msgstr "Nombre de comentaires récents à afficher sur le tableau de bord."

#: defaults.py:190
msgid "Show unapproved comments"
msgstr "Afficher les commentaires non-modérés"

#: defaults.py:191
msgid ""
"If ``True``, comments that have ``is_public`` unchecked will still be "
"displayed, but replaced with a ``waiting to be approved`` message."
msgstr ""

#: defaults.py:200
msgid "Show removed comments"
msgstr "Afficher les commentaires supprimés"

#: defaults.py:201
msgid ""
"If ``True``, comments that have ``removed`` checked will still be displayed,"
" but replaced with a ``removed`` message."
msgstr ""

#: defaults.py:222
msgid ""
"A three item sequence, each containing a sequence of template tags used to "
"render the admin dashboard."
msgstr ""

#: defaults.py:230
msgid "Device specific template sub-directory to use as the default device."
msgstr ""

#: defaults.py:238
msgid ""
"Mapping of device specific template sub-directory names to the sequence of "
"strings that may be found in their user agents."
msgstr ""

#: defaults.py:260
msgid ""
"A sequence of fields that will be injected into Mezzanine's (or any "
"library's) models. Each item in the sequence is a four item sequence. The "
"first two items are the dotted path to the model and its field name to be "
"added, and the dotted path to the field class to use for the field. The "
"third and fourth items are a sequence of positional args and a dictionary of"
" keyword args, to use when creating the field instance. When specifying the "
"field class, the path ``django.models.db.`` can be omitted for regular "
"Django model fields."
msgstr ""

#: defaults.py:275
msgid ""
"If ``True``, emails sent to extra recipients for form submissions won't be "
"sent from an address taken from one of the form's email fields."
msgstr ""

#: defaults.py:284
msgid "Max length allowed for field values in the forms app."
msgstr "Longeur maximum autorisée pour les champs de formulaire."

#: defaults.py:291
msgid "Max length allowed for field labels in the forms app."
msgstr "Longeur maximum autorisée pour les libellés de champs de formulaire."

#: defaults.py:298
msgid "If ``True``, website forms will use HTML5 features."
msgstr ""

#: defaults.py:305
msgid "Char to use as a field delimiter when exporting form responses as CSV."
msgstr "Caractère à utiliser comme séparateur de champs lors d'un export CSV."

#: defaults.py:313
msgid "Absolute path for storing file uploads for the forms app."
msgstr "Chemin absolu pour stocker les fichiers téléchargés depuis un formulaire"

#: defaults.py:320
msgid "Google Analytics ID"
msgstr "ID Google Analytics"

#: defaults.py:322
msgid "Google Analytics ID (http://www.google.com/analytics/)"
msgstr "ID Google Analytics (http://www.google.com/analytics/)"

#: defaults.py:328
msgid ""
"A sequence mapping host names to themes, allowing different templates to be "
"served per HTTP hosts Each item in the sequence is a two item sequence, "
"containing a host such as ``othersite.example.com``, and the name of an "
"importable Python package for the theme. If the host is matched for a "
"request, the templates directory inside the theme package will be first "
"searched when loading templates."
msgstr ""

#: defaults.py:342
msgid "Name of the jQuery file."
msgstr "Nom du fichier jQuery."

#: defaults.py:343
msgid "Name of the jQuery file found in mezzanine/core/static/mezzanine/js/"
msgstr "Nom du fichier jQuery trouvé dans mezzanine/core/static/mezzanine/js/"

#: defaults.py:351
msgid "Max paging links"
msgstr "Nombre maximum de liens de pagination"

#: defaults.py:352
msgid "Max number of paging links to display when paginating."
msgstr "Nombre maximum de liens de pagination à afficher lors de la pagination"

#: defaults.py:359
msgid ""
"If ``True``, the pages menu will show all levels of navigation, otherwise "
"child pages are only shown when viewing the parent page."
msgstr ""

#: defaults.py:368
msgid "Min value for a rating."
msgstr "Valeur minimale d'une évaluation."

#: defaults.py:375
msgid "Max value for a rating."
msgstr "Valeur maximale d'une évaluation."

#: defaults.py:382
msgid ""
"Dotted package path and class name of the widget to use for the "
"``RichTextField``."
msgstr ""

#: defaults.py:390
msgid ""
"List of HTML tags that won't be stripped from ``RichTextField`` instances."
msgstr ""

#: defaults.py:406
msgid ""
"List of HTML attributes that won't be stripped from ``RichTextField`` "
"instances."
msgstr ""

#: defaults.py:424
msgid ""
"Dotted path to the function to call on a ``RichTextField`` value before it "
"is rendered to the template."
msgstr ""

#: defaults.py:434
msgid "High"
msgstr ""

#: defaults.py:435
msgid "Low (allows video, iframe, Flash, etc)"
msgstr ""

#: defaults.py:436
msgid "No filtering"
msgstr ""

#: defaults.py:441
msgid "Rich Text filter level"
msgstr ""

#: defaults.py:442
msgid ""
"*Do not change this setting unless you know what you're doing.*\n"
"\n"
"When content is saved in a Rich Text (WYSIWYG) field, unsafe HTML tags and attributes are stripped from the content to protect against staff members intentionally adding code that could be used to cause problems, such as changing their account to a super-user with full access to the system.\n"
"\n"
"This setting allows you to change the level of filtering that occurs. Setting it to low will allow certain extra tags to be permitted, such as those required for embedding video. While these tags are not the main candidates for users adding malicious code, they are still considered dangerous and could potentially be mis-used by a particularly technical user, and so are filtered out when the filtering level is set to high.\n"
"\n"
"Setting the filtering level to no filtering, will disable all filtering, and allow any code to be entered by staff members, including script tags."
msgstr ""

#: defaults.py:465
msgid "Search results per page"
msgstr "Nombre de résultats de recherche par page"

#: defaults.py:466
msgid "Number of results shown in the search results page."
msgstr "Nombre de résultats affichés dans la page de résultats de recherche."

#: defaults.py:473
msgid "Site Title"
msgstr "Titre du site"

#: defaults.py:474
msgid ""
"Title that will display at the top of the site, and be appended to the "
"content of the HTML title tags on every page."
msgstr ""

#: defaults.py:482
msgid "Tagline"
msgstr "Slogan"

#: defaults.py:483
msgid "A tag line that will appear at the top of all pages."
msgstr "Un slogan qui sera affiché en haut de chaque page."

#: defaults.py:485
msgid "An open source content management platform."
msgstr "Une plateforme de gestion de contenu open-source."

#: defaults.py:490
msgid ""
"Dotted Python path to the callable for converting strings into URL slugs. "
"Defaults to ``mezzanine.utils.urls.slugify_unicode`` which allows for non-"
"ascii URLS. Change to ``django.template.defaultfilters.slugify`` to use "
"Django's slugify function, or something of your own if required."
msgstr ""

#: defaults.py:501
msgid "Enable SSL"
msgstr "Activer SSL"

#: defaults.py:502
msgid ""
"If ``True``, users will be automatically redirected to HTTPS for the URLs "
"specified by the ``SSL_FORCE_URL_PREFIXES`` setting."
msgstr ""

#: defaults.py:511
msgid "Force Host"
msgstr "Forcer le nom d'hôte"

#: defaults.py:512
msgid ""
"Host name that the site should always be accessed via that matches the SSL "
"certificate."
msgstr ""

#: defaults.py:530
msgid "List of words which will be stripped from search queries."
msgstr "Liste de mots à supprimer des termes de recherche."

#: defaults.py:587
msgid "Tag Cloud Sizes"
msgstr "Taille du nuage de tags"

#: defaults.py:588
msgid "Number of different sizes for tags when shown as a cloud."
msgstr "Nombre de tailles de tag différentes à afficher dans un nuage."

#: defaults.py:595
msgid "Sequence of setting names available within templates."
msgstr "Séquance de noms de paramètres accessibles depuis les templates."

#: defaults.py:610
msgid ""
"Directory name to store thumbnails in, that will be created relative to the "
"original image's directory."
msgstr ""

#: defaults.py:618
msgid ""
"URL for the JavaScript file (relative to ``STATIC_URL``) that handles "
"configuring TinyMCE when the default ``RICHTEXT_WIDGET_CLASS`` is used."
msgstr ""

#: defaults.py:629
msgid "Default Twitter Query Type"
msgstr ""

#: defaults.py:630
msgid ""
"Type of query that will be used to retrieve tweets for the default Twitter "
"feed."
msgstr ""

#: defaults.py:639
msgid "Default Twitter Query"
msgstr ""

#: defaults.py:640
msgid "Twitter query to use for the default query type."
msgstr ""

#: defaults.py:647
msgid "Default Number of Tweets"
msgstr ""

#: defaults.py:648
msgid "Number of tweets to display in the default Twitter feed."
msgstr ""

#: defaults.py:661
msgid ""
"If ``True``, the south application will be automatically added to the "
"``INSTALLED_APPS`` setting."
msgstr ""

#: forms.py:52
msgid "Miscellaneous"
msgstr "Divers"

#: models.py:17
msgid "Setting"
msgstr "Paramètre"

#: models.py:18
msgid "Settings"
msgstr "Paramètres"

#: templates/admin/conf/setting/change_list.html:8
msgid "Please correct the errors below."
msgstr "Veuillez corriger les erreurs ci-dessous."

#: templates/admin/conf/setting/change_list.html:31
msgid "Save"
msgstr "Enregistrer"
